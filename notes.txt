'''
Automation Framework - Introduction
-----------------------------------
What is an Automation Framework
-------------------------------
- It is a or provides a systematic approach to writing, executing, and maintaining test scripts, promoting reusability,
scalability, and efficiency.
- We organize automation project files and folders in structured manner.

Objectives
-----------
i. Reusability: This is better than rewriting
ii. Scalability: Increase in executing script
iii. Maintainability: Change can be done by calling different functionality in multiple places
iv. Efficiency: Minimum manual efforts
v. Reporting: Helps to report


Types of Automation Frameworks
------------------------------
1. Built-in Frameworks
------------------------
- These are Ready-to-use frameworks
- Different types of built-in `Frameworks are ==> TestNG, Junit, Pytest, Unittest, Cucumber, Behave,etc


2. User-Defined/Customized Frameworks
--------------------------------------
- This is Customized frameworks meet specific project or organization requirements.txt by integrating tools and libraries.
- Different types of User-Defined:
i. Hybrid-Driven framework combine pom
ii. Keyword-driven framework
iii. Data Driven Approaches


Different Types of Phases in Developing Automation Framework
--------------------------------------------------------------
1. Requirement Analysis: Identify testing needs, tools, and project requirements.txt.
2. Tool Selection: Choose appropriate tools and libraries based on application type and
   project needs.
3. Framework Design: Decide on the structure, architecture, and approach (e.g., modular,
   hybrid, etc.).
4. Implementation: Develop reusable components, utilities, and test scripts.
5. Integration: Configure CI/CD pipelines for automated execution and reporting.
6. Testing: Validate the framework by executing sample test cases.
7. Maintenance: Continuously improve the framework to accommodate application
   changes.

1. Configurations - Directory
2. Logs - Directory
3. PageObjects - Package
4. Reports - Directory
5. Screen-short - Directory
6. TestCases - Package
7. TestData - Directory
8. Utilities - Package
9. Requirements.txt

Project: https://tutorialsninja.com/demo/


How to Select an Automation Testing Tool for UI
------------------------------------------------
1.Know your Requirements:
	- Identify application type (Static,Dynamic,Responsive)
	- Understand technology stack (HTML,Angular,React)
	- Ensure tool supports all target browsers and platforms
2.Check Tool Features:
	- Cross-browser compatibility
	- Ease of Integration
	- Dynamic content handling (pop-ups & e.g youtube)
3.Evaluate Usability: Simple set-up in your machine e.g pip install selenium, and tutorial
4.Consider Costs: Reducing costs by going for open-source tools e.g either paid or free tools by comparison for hidden costs
5.Test the Tool: Select tools by developing proof of tools (e.g firstly select POC)
6.Feature Readiness: Ensuring regular updates are available for each and every tools
7.Make a Decision: Select a specific tool


How to choose Test Cases for Automation? Best High-Ranking Steps:
------------------------------------------------------------------
1. High Priority Tests: Test cases for critical functionalities of the application.
2. Repetitive Tests: Regression and smoke tests that are run frequently.
3. Data-Driven Tests: Scenarios requiring multiple input combinations.
4. Time-Consuming Tests: Tests that take significant time to execute manually.
5. Stable Tests: Scenarios with a stable application feature.


Avoid Automation: No Need To Automate
---------------------------------------
1. Exploratory or Ad-hoc tests.
2. Tests for features still under development.
3. Low-priority or rarely used functionalities.

- 100% automation is not at all possible practically.


- We only keep modules in the Package;
Python Packages for this project are;
-------------------------------------
1. PageObjects
2. Test Cases
3. Utilities

Directories are;
----------------
1. Configurations
2. Logs
3. Reports
4. Screenshots
5. Test Data

Text file is;
--------------
1. Requirements

- In Java will use .xls file instead of .txt file we're using in python

Next Steps;
------------
1. Create a list of libraries or dependencies
     - Called requirement.txt file and list all the requirements needed
     - Then you go to terminal and type ==> 'pip install - requirements.txt' to automatically install all at once with one simple click
     - Then ==> 'pip list' to confirm they've all been installed
'''
'''
Created:
PageObjects Package: Must consists of Locators (Pointing to specific elements), Constructors, and Methods
    1. HopmePage.py ==> consists of multiple elements
'''

Execution Code: pytest -s -v testCases/test_001_AccountRegistration.py

Screenshot pathway:

Import os

os.path.dirname(os.getcwd())+”\screenshots\\”+text_account_reg.png”

Importance of Logging
----------------------
1. Every application keeps a log file.
2. All actions performed in the application are recorded in this log file.
3. By looking at the log file, we can understand what the user is doing, especially in banking and financial apps.
4. When a bug occurs, it gets logged in the file. We can send this log file to the developer, who can analyze it to identify
the issue.
5. In automation frameworks, logs are important because we often run many test cases at once. While we work on other tasks,
the log file helps us track the status of these tests (like warnings, failures, or passes). This way, we can see what each
automated test case is doing.

6. levels of logs
-------------------
Warn>Debug>info>error>fatal

How to open Report in a browser?
---------------------------------
- Right click the displayed automatic output 'name' inside the 'reports' folder after running the code
- Click on 'Open in'
- Click on 'Browser'
- Then Click on preferred browser to display the report
- Then date and time stamp would display on the opened report in browser
- After opening on the browser and you click on the 'Test' the full captured log call will display
- And if one did a multiple Test Cases, it will display under the 'Test' Column

Creating LoginPage
-------------------
- Validation shouldn't be included in the page object class

Test Data
----------

baseurl = https://tutorialsninja.com/demo/index.php?route=common/home
email = test@example.com
password = abcxyz


Email: abcxyz@example.com
password: abcxyz


Code to Run TCs located in the TC Package
------------------------------------------
Code to use when testing all the Test Cases in the Test Cases Package is =>  pytest -s -v --browser chrome testCases/

NB:
---
- One should never add code or any test data in the Page Object Class
- It should be pass in the Test Cases files

To Run Different Types of Testing or Group Run, Codes to use in Terminal;
------------------------------------------------------------
1. pytest -s -v -m "sanity" --browser chrome testCases
2. pytest -s -v -m "sanity and regression and smoke" --browser chrome testCases
3. pytest -s -v -m "sanity or regression" --browser chrome testCases


Selenium Hydrid Framework - 5
-----------------------------
As discussed from the above that in the Development of a Framework there are many approach and they are;
- Multiple Phase in the design and development of framework are:
    1. Analysis: What kind of application,how many pages are there,what are test cases to be automated.
	2. Design & implementation: Design the framework from the scratch.

We cannot automate all in one or two days its a continuous process it will go on 1 month or 2 month based on project
complexity and number of test cases.As soon as we added all the test cases once we have done our project normally we will
run our test cases on local machine everything is working fine.But practically we will able to write our test cases in
remote environments.

    3. Execution: We should execute our test cases out of pycharm because pycharm has internal configuration created in
    virtual environments but remote environments do not.so we have to run in remote environments also. Before this we should
    our tests without pycharm in local environment first  using command prompt and that should be successful.
    4. Maintenance: Git , GitHub, Jenkins

STEPS FOR CODES REPOSITORY
---------------------------
1. GitHub Link: https://github.com/olakoya/HybridFramework.git
2. git remote add origin "https://github.com/olakoya/HybridFramework.git"

Note
----
At the very beginning when it's time to push to GitHub, user needs to ask for authentication accordingly;

